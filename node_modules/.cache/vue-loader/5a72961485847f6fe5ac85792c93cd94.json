{"remainingRequest":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/src/views/Dashboard/Dashboard.vue?vue&type=style&index=0&id=2131a5ef&lang=scss&scoped=true&","dependencies":[{"path":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/src/views/Dashboard/Dashboard.vue","mtime":1655717713379},{"path":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/mall-manage-system/01-manage-system-home/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAgIEBpbXBvcnQgJ35AL2Fzc2V0cy9zY3NzL2hvbWUnOwoJLmRpdi1pbmxpbmV7IAoJCWRpc3BsYXk6aW5saW5lOwoJCXdpZHRoOjMwJTsKCX0KCTo6di1kZWVwLmVsLWlucHV0LS1zdWZmaXggLmVsLWlucHV0X19pbm5lciB7CglwYWRkaW5nLXJpZ2h0OiAxMDJweDsKCWJhY2tncm91bmQtY29sb3I6IzYyNzZlZjsKCWNvbG9yOmJsYWNrOwoJfQoJLyoKCTo6di1kZWVwLmVsLWlucHV0X19pbm5lciB7CgliYWNrZ3JvdW5kLWNvbG9yOiM1MjAwYzE7Cgljb2xvcjogI2ZmZjsKCWJvcmRlcjogMXB4IHNvbGlkICMzMWNhZTQ7Cgl9CgkKCS5lbC1zZWxlY3QtZHJvcGRvd25fX2l0ZW0gewogIGZvbnQtc2l6ZTogMTVweDsKCWxpbmUtaGVpZ2h0OiAxOXB4OwoJY29sb3I6ICMwMDAwMDA7Cglmb250LXdlaWdodDogMjAwOwoJYmFja2dyb3VuZC1jb2xvcjogIzUyMDBjMTsKCX0KCTo6di1kZWVwLmVsLXNlbGVjdC1kcm9wZG93biB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjNTIwMGMxOwoJYm9yZGVyOiAxcHggc29saWQgYmx1ZTsKCX0KCTo6di1kZWVwLmVsLXNlbGVjdC1kcm9wZG93bl9fbGlzdCB7CglwYWRkaW5nOiAwOwoJYmFja2dyb3VuZC1jb2xvcjojNTIwMGMxOwoJfQoJOjp2LWRlZXAuZWwtcG9wcGVyW3gtcGxhY2VtZW50Xj0iYm90dG9tIl0gewoJbWFyZ2luLXRvcDogMHB4OwoJYmFja2dyb3VuZC1jb2xvcjojNTIwMGMxOwoJfQoJOjp2LWRlZXAuZWwtcG9wcGVyIC5wb3BwZXJfX2Fycm93LAoJOjp2LWRlZXAuZWwtcG9wcGVyIC5wb3BwZXJfX2Fycm93OjphZnRlciB7CglkaXNwbGF5OiBub25lOwoJYmFja2dyb3VuZC1jb2xvcjojNTIwMGMxOwoJfQoJLmVsLXNlbGVjdC1kcm9wZG93bl9faXRlbTpob3ZlciB7CgliYWNrZ3JvdW5kLWNvbG9yOiM1MjAwYzE7CgkvL2JhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMjI1LCAyMTksIDAuNjkwMTk2MDc4NDMxMzczKTsKCX0KCSovCg=="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappingsgwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views/Dashboard","sourcesContent":["<template>\n\t<el-row class=\"home\" :gutter=\"30\">\n\t\t<el-col :span=\"15\" style=\"margin-top: 20px\">\n\t\t\t<el-card shadow=\"hover\" \n\t\t\tstyle=\"background-color:#7c96ff;color:black;height: 80px;width:50%;margin-top: 10px;font-size: 1.8vw;text-align: center;\">\n\t\t\t\tDashboard Overview\n\t\t\t</el-card>\n\t\t\t<el-card id=\"totaltime\" shadow=\"hover\" style=\"background-color: black;height: 260px;margin-top: 40px\">\n\t\t\t</el-card>\n\t\t\t<el-card shadow=\"hover\"\n\t\t\tstyle=\"background-color:#23ffe5;color:black;width:30%;margin-top: 40px;font-size: 1.0em;text-align: center;\">\n\t\t\tproject time\n\t\t\t</el-card>\n\t\t\t<el-card id=\"projectime\" shadow=\"hover\" style=\"background-color: black;height: 260px;margin-top: 20px\">\n\t\t\t</el-card>\n\t\t\t<el-card shadow=\"hover\"\n\t\t\tstyle=\"background-color:#23ffe5;color:black;width:30%;margin-top: 40px;font-size: 1.0em;text-align: center;\">\n\t\t\t\tlanguage time\n\t\t\t</el-card>\n\t\t\t<el-card id=\"languagetime\" shadow=\"hover\" style=\"background-color: black;height: 260px;margin-top: 20px\">\n\t\t\t</el-card>\n\t\t</el-col>\n\t\t<el-col :span=\"9\" style=\"margin-top: 20px\">\n\t\t\t<div  style=\"background-color: black; height: 45px;margin-top: 13px\">\n\t\t\t\t<el-col :span=\"10\">\n\t\t\t\t\tLast seven days</el-col>\n\t\t\t\t<el-col :span=\"14\" style=\"border-width: 20px;font-size: 1.3vw;color:white\">\n\t\t\t\t<el-date-picker\n\t\t\t\t\tv-model=\"value2\"\n\t\t\t\t\talign=\"right\"\n\t\t\t\t\ttype=\"date\"\n\t\t\t\t\tplaceholder=\"选择日期\"\n\t\t\t\t\t:picker-options=\"pickerOptions\">\n\t\t\t\t</el-date-picker>\t\n\t\t\t\t</el-col>\n\t\t\t</div>\n\t\t\t<el-card id=\"myaveragetime\" shadow=\"hover\" style=\"height: 260px;margin-top: 10px;background-color:#0f0b28; \">\n\t\t\t</el-card>\n\t\t\t<el-card id=\"mytool\" shadow=\"hover\" style=\"background-color: #0f0b28;height: 260px;margin-top: 15px\">\n\t\t\t</el-card>\n\t\t\t<el-card id=\"operating_system\" shadow=\"hover\" style=\"height: 260px;margin-top: 10px;background-color:#0f0b28\">\n\t\t\t</el-card>\n\t\t\t<el-card id=\"language\" shadow=\"hover\" style=\"height: 260px;margin-top: 10px;background-color:#0f0b28\">\n\t\t\t</el-card>\n\t\t</el-col>\n\t</el-row>\n</template>\n\n<script>\n\timport * as echarts from 'echarts';\n    export default {\n        data() {\n            return {\n                userImg: require('../../assets/images/user.png'),\n\t\t\t\tpickerOptions: {\n\t\t\t\tdisabledDate(time) {\n\t\t\t\treturn time.getTime() > Date.now();\n\t\t\t\t},\n\t\t\t\tshortcuts: [{\n\t\t\t\ttext: '今天',\n\t\t\t\tonClick(picker) {\n\t\t\t\tpicker.$emit('pick', new Date());\n\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\ttext: '昨天',\n\t\t\t\tonClick(picker) {\n\t\t\t\tconst date = new Date();\n\t\t\t\tdate.setTime(date.getTime() - 3600 * 1000 * 24);\n\t\t\t\tpicker.$emit('pick', date);\n\t\t\t\t}\n\t\t\t\t}, {\n\t\t\t\ttext: '一周前',\n\t\t\t\tonClick(picker) {\n\t\t\t\tconst date = new Date();\n\t\t\t\tdate.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n\t\t\t\tpicker.$emit('pick', date);\n\t\t\t\t}\n\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\tvalue2: ''\n\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tthis.drawLine();\n\t\t\tthis.tool();\n\t\t\tthis.getmyaveragetime();\n\t\t\tthis.getoperating_system();\n\t\t\tthis.getlanguage();\n\t\t\tthis.getprojectime();\n\t\t\tthis.getlanguagetime();\n\t\t},\n        methods: {\n\t\t\t/*\n            getTableData() {\n                this.$http.get('/home/getData').then(res => {\n                    res = res.data\n                    this.tableData = res.data.tableData\n                })\n\t\t\t\t\n            }\n\t\t\t*/\n\t\t\tdrawLine(){\n\t\t\t\tvar chartDom = document.getElementById('totaltime');\n\t\t\t\tvar myChart = this.$echarts.init(chartDom, '');\n\t\t\t\tvar option;\n\t\t\t\t\n\n\t\t\t\toption = {\n\t\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis',\n\t\t\t\taxisPointer: {\n\t\t\t\ttype: 'none'\n\t\t\t\t},\n\t\t\t\tformatter: function (params) {\n\t\t\t\t\tvar hour=Math.floor(params[0].value/60);\n\t\t\t\t\tvar min=params[0].value-hour*60;\n\t\t\t\treturn params[0].name + ': ' + hour+'h '+min+'m';\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\tdata: ['Jun 9th', 'Jun 10th', 'Jun 11th', 'Jun 12th', 'Jun 13th', 'Jun 14th', 'Jun 15th'],\n\t\t\t\taxisTick: { show: false },\n\t\t\t\taxisLine: { show: false },\n\t\t\t\taxisLabel: {\n\t\t\t\tcolor: '#ffffff',\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\ttype: 'value', \n\t\t\t\tsplitLine: { show: false },\n\t\t\t\taxisTick: { show: false },\n\t\t\t\taxisLine: { show: false },\n\t\t\t\taxisLabel: {\n\t\t\t\t\tfontSize: 22,\n\t\t\t\t\tshow: false,\n\t\t\t\t\t//纵坐标显示转换 将数字转为特殊符号 这里重新定义就可以\n                }\t\n\t\t\t\t},\n\t\t\t\tcolor: ['#4c6de8'],\n\t\t\t\ttitle: {\n\t\t\t\ttext: '*Coding time over the Last 7 Days. ',\n\t\t\t\tleft: 'left',\n\t\t\t\ttop: 3,\n\t\t\t\ttextStyle: {\n\t\t\t\tcolor: '#75ffff'\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttoolbox: {\n\t\t\t\tshow: true,\n\t\t\t\tfeature: {\n\t\t\t\tmark: { show: true },\n\t\t\t\trestore: { show: true },\n\t\t\t\tsaveAsImage: { show: true }\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\tname: 'hill',\n\t\t\t\ttype: 'pictorialBar',\n\t\t\t\tbarCategoryGap: '-130%',\n\t\t\t\t// symbol: 'path://M0,10 L10,10 L5,0 L0,10 z',\n\t\t\t\tsymbol: 'path://M0,10 L10,10 C5.5,10 5.5,5 5,0 C4.5,5 4.5,10 0,10 z',\n\t\t\t\titemStyle: {\n\t\t\t\topacity: 0.5\n\t\t\t\t},\n\t\t\t\temphasis: {\n\t\t\t\titemStyle: {\n\t\t\t\topacity: 1\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdata: [167, 230, 25, 111, 270, 9, 2],\n\t\t\t\tz: 10\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\toption && myChart.setOption(option);\n\t\t\t},\n\t\t\ttool(){\n\t\t\t\tvar chartDom = document.getElementById('mytool');\n\t\t\t\tvar myChart = this.$echarts.init(chartDom,'dark');\n\t\t\t\tvar option;\n\t\t\t\n\t\t\toption = {\n\t\t\tbackgroundColor: '#0f0b28',\n\t\t\ttitle: {\n\t\t\ttext: 'Editors',\n\t\t\tleft: 'center',\n\t\t\ttop: 'bottom',\n\t\t\ttextStyle: {\n\t\t\tcolor: '#ccc'\n\t\t\t}\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\ttrigger: 'item'\n\t\t\t},\n\t\t\tvisualMap: {\n\t\t\tshow: false,\n\t\t\tmin: 80,\n\t\t\tmax: 600,\n\t\t\tinRange: {\n\t\t\tcolorLightness: [0, 1]\n\t\t\t}\n\t\t\t},\n\t\t\tlegend: {\n\t\t\ttop: '5%',\n\t\t\tleft: 'left'\n\t\t\t},\n\t\t\ttoolbox: {\n\t\t\tshow: true,\n\t\t\tfeature: {\n\t\t\tmark: { show: true },\n\t\t\trestore: { show: true },\n\t\t\tsaveAsImage: { show: true }\n\t\t\t}\n\t\t\t},\n\t\t\tseries: [\n\t\t\t{\n\t\t\tname: '',\n\t\t\ttype: 'pie',\n\t\t\tradius: '55%',\n\t\t\tcenter: ['50%', '50%'],\n\t\t\tdata: [\n\t\t\t{ value: 335, name: 'VS code '+'24h36m24s' },\n\t\t\t].sort(function (a, b) {\n\t\t\treturn a.value - b.value;\n\t\t\t}),\n\t\t\troseType: 'radius',\n\t\t\tlabel: {\n\t\t\tcolor: 'rgba(255, 255, 255, 1.0)'\n\t\t\t},\n\t\t\tlabelLine: {\n\t\t\tlineStyle: {\n\t\t\tcolor: 'rgba(255, 255, 255, 0.3)'\n\t\t\t},\n\t\t\tsmooth: 0.2,\n\t\t\tlength: 10,\n\t\t\tlength2: 20\n\t\t\t},\n\t\t\titemStyle: {\n\t\t\tcolor: '#c23531',\n\t\t\tshadowBlur: 200,\n\t\t\tshadowColor: 'rgba(0, 0, 0, 0.5)'\n\t\t\t},\n\t\t\tanimationType: 'scale',\n\t\t\tanimationEasing: 'elasticOut',\n\t\t\tanimationDelay: function () {\n\t\t\treturn Math.random() * 200;\n\t\t\t}\n\t\t\t}\n\t\t\t]\n\t\t\t};\n\t\t\t\n\t\t\toption && myChart.setOption(option);\n\n\t\t\t},\n\t\t\tgetmyaveragetime()\n\t\t\t{\n\t\t\t\tvar chartDom = document.getElementById('myaveragetime');\n\t\t\t\tvar myChart = this.$echarts.init(chartDom,'dark');\n\t\t\t\tvar option;\n\t\t\t\t\n\t\t\t\toption = {\n\t\t\t\ttitle: {\n\t\t\t\ttext: 'Average Coding time per day ',\n\t\t\t\tleft: 'center',\n\t\t\t\ttop: 'bottom',\n\t\t\t\ttextStyle: {\n\t\t\t\tcolor: '#ffffff'\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttoolbox: {\n\t\t\t\tshow: true,\n\t\t\t\tfeature: {\n\t\t\t\tmark: { show: true },\n\t\t\t\trestore: { show: true },\n\t\t\t\tsaveAsImage: { show: true }\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\ttype: 'gauge',\n\t\t\t\taxisLine: {\n\t\t\t\tlineStyle: {\n\t\t\t\twidth: 30,\n\t\t\t\tcolor: [\n\t\t\t\t[0.3, '#67e0e3'],\n\t\t\t\t[0.7, '#37a2da'],\n\t\t\t\t[1, '#fd666d']\n\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpointer: {\n\t\t\t\titemStyle: {\n\t\t\t\tcolor: 'auto'\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taxisTick: {\n\t\t\t\tdistance: -30,\n\t\t\t\tlength: 8,\n\t\t\t\tlineStyle: {\n\t\t\t\tcolor: '#fff',\n\t\t\t\twidth: 3\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsplitLine: {\n\t\t\t\tdistance: -30,\n\t\t\t\tlength: 30,\n\t\t\t\tlineStyle: {\n\t\t\t\tcolor: '#fff',\n\t\t\t\twidth: 4\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taxisLabel: {\n\t\t\t\tcolor: 'auto',\n\t\t\t\tdistance: 40,\n\t\t\t\tfontSize: 10\n\t\t\t\t},\n\t\t\t\tdetail: {\n\t\t\t\tvalueAnimation: true,\n\t\t\t\tformatter: '{value}h32m14s',\n\t\t\t\tcolor: 'white',\n\t\t\t\tfontsize:10\n\t\t\t\t},\n\t\t\t\tdata: [\n\t\t\t\t{\n\t\t\t\tvalue: 70\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t\t};\n\t\t\t\t//定时函数\n\t\t\t\tsetInterval(function () {\n\t\t\t\tmyChart.setOption({\n\t\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\tdata: [\n\t\t\t\t{\n\t\t\t\tvalue: 100\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t\t});\n\t\t\t\t}, 2000);\n\t\t\t\t\n\t\t\t\toption && myChart.setOption(option);\n\t\t\t},\n\t\t\tgetoperating_system()\n\t\t\t{\n\t\t\t\tvar chartDom = document.getElementById('operating_system');\n\t\t\t\tvar myChart = this.$echarts.init(chartDom,'dark');\n\t\t\t\tvar option;\n\t\t\t\t\n\t\t\t\toption = {\n\t\t\t\tbackgroundColor: '#0f0b28',\n\t\t\t\ttitle: {\n\t\t\t\ttext: 'Operating Systems',\n\t\t\t\tleft: 'center',\n\t\t\t\ttop: 220,\n\t\t\t\ttextStyle: {\n\t\t\t\tcolor: '#ffffff'\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item'\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\ttop: '5%',\n\t\t\t\tleft: 'left'\n\t\t\t\t},\n\t\t\t\ttoolbox: {\n\t\t\t\tshow: true,\n\t\t\t\tfeature: {\n\t\t\t\tmark: { show: true },\n\t\t\t\trestore: { show: true },\n\t\t\t\tsaveAsImage: { show: true }\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\tname: 'Operating Systems',\n\t\t\t\ttype: 'pie',\n\t\t\t\tradius: ['40%', '70%'],\n\t\t\t\tavoidLabelOverlap: false,\n\t\t\t\tlabel: {\n\t\t\t\tshow: true,\n\t\t\t\tposition: 'center'\n\t\t\t\t},\n\t\t\t\temphasis: {\n\t\t\t\tlabel: {\n\t\t\t\tshow: true,\n\t\t\t\tfontSize: '40',\n\t\t\t\tfontWeight: 'bold',\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlabelLine: {\n\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tdata: [\n\t\t\t\t{ value: 1048, name: 'Mac' },\n\t\t\t\t{ value: 2048, name: 'windows' },\n\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t]\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\toption && myChart.setOption(option);\n\t\t\t},\n\t\t\tgetlanguage(){\n\t\t\t\tvar chartDom = document.getElementById('language');\n\t\t\t\tvar myChart = this.$echarts.init(chartDom,'dark');\n\t\t\t\tvar option;\n\t\t\t\t\n\t\t\t\toption = {\n\t\t\t\ttitle: {\n\t\t\t\ttext: 'Language',\n\t\t\t\ttop: 'bottom',\n\t\t\t\tleft:'center'\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item',\n\t\t\t\tformatter: '{a} <br/>{b} : {c} ({d}%)'\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\ttop: 'top',\n\t\t\t\tleft:'left'\n\t\t\t\t},\n\t\t\t\ttoolbox: {\n\t\t\t\tshow: true,\n\t\t\t\tfeature: {\n\t\t\t\tmark: { show: true },\n\t\t\t\trestore: { show: true },\n\t\t\t\tsaveAsImage: { show: true }\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\tname: 'Language',\n\t\t\t\ttype: 'pie',\n\t\t\t\tradius: [2.5, 100],\n\t\t\t\tcenter: ['50%', '50%'],\n\t\t\t\troseType: 'radius',\n\t\t\t\titemStyle: {\n\t\t\t\tborderRadius: 4\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\temphasis: {\n\t\t\t\tlabel: {\n\t\t\t\tshow: true\n\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdata: [\n\t\t\t\t{ value: 40, name: 'vue' },\n\t\t\t\t{ value: 33, name: 'python' },\n\t\t\t\t{ value: 28, name: 'java' }\n\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t]\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\toption && myChart.setOption(option);\n\t\t\t},\n\t\t\tgetprojectime(){\n\t\t\tvar chartDom = document.getElementById('projectime');\n\t\t\tvar myChart = this.$echarts.init(chartDom);\n\t\t\tvar option;\n\t\t\tvar colors = ['#87ffa4', '#8aa3d6', '#d36ce2']; //三种状态的颜色\n\t\t\tvar state = ['Reportime', 'hello-world','yeah']; //三种状态\n\t\t\t\n\t\t\t// echart配置\n\t\t\toption = {\n\t\t\tcolor: colors,\n\t\t\ttooltip: {//提示框\n\t\t\tformatter: function (params) {\n\t\t\treturn params.name + ':' + params.value[1] + '~' + params.value[2];\n\t\t\t}//数据的值\n\t\t\t},\n\t\t\tlegend: {//图例\n\t\t\tdata: state,\n\t\t\tbottom: '1%',\n\t\t\tselectedMode: false, // 图例设为不可点击\n\t\t\ttextStyle: {\n\t\t\tcolor: '#ffffff'\n\t\t\t}\n\t\t\t},\n\t\t\tgrid: {//绘图网格\n\t\t\tleft: '3%',\n\t\t\tright: '3%',\n\t\t\ttop: '1%',\n\t\t\tbottom: '10%',\n\t\t\tcontainLabel: true\n\t\t\t},\n\t\t\txAxis: { \n\t\t\ttype: 'time',               \n\t\t\tinterval: 3600  * 1000,   //以一个小时递增 \n\t\t\t//min:'2009/6/1 0:00', //将data里最小时间的整点时间设为min,否则min会以data里面的min为开始进行整点递增\n\t\t\taxisLabel: {formatter: function (value) { \n\t\t\tvar date = new Date(value); return getzf(date.getHours()) + ':00';  \n\t\t\tfunction getzf(num) {\n\t\t\t\tif (parseInt(num) < 10) {  num = '0' + num; }  \n\t\t\t\treturn num; \n\t\t\t}           \n\t\t\t}, \n\t\t\tcolor: '#ffffff',\n\t\t\t},\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\tdata: ['Reportime', 'hello-world', 'yeah'],\n\t\t\taxisLabel: {\n\t\t\t\tfontSize: 12,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t}\t\n\t\t\t},\n\t\t\ttoolbox: {\n\t\t\tshow: true,\n\t\t\tfeature: {\n\t\t\tmark: { show: true },\n\t\t\trestore: { show: true },\n\t\t\tsaveAsImage: { show: true }\n\t\t\t}\n\t\t\t},\n\t\t\tseries: [\n\t\t\t// 用空bar来显示三个图例\n\t\t\t{ name: state[0], type: 'bar', data: [] },\n\t\t\t{ name: state[1], type: 'bar', data: [] },\n\t\t\t{ name: state[2], type: 'bar', data: [] },\n\t\t\t{\n\t\t\ttype: 'custom',                \n\t\t\trenderItem: function (params, api) {//开发者自定义的图形元素渲染逻辑，是通过书写 renderItem 函数实现的\n\t\t\tvar categoryIndex = api.value(0);//这里使用 api.value(0) 取出当前 dataItem 中第一个维度的数值。\n\t\t\tvar start = api.coord([api.value(1), categoryIndex]); // 这里使用 api.coord(...) 将数值在当前坐标系中转换成为屏幕上的点的像素值。\n\t\t\tvar end = api.coord([api.value(2), categoryIndex]);\n\t\t\tvar height = 35\n\t\t\t\n\t\t\treturn {\n\t\t\ttype: 'rect',// 表示这个图形元素是矩形。还可以是 'circle', 'sector', 'polygon' 等等。\n\t\t\tshape: echarts.graphic.clipRectByRect({ // 矩形的位置和大小。\n\t\t\tx: start[0],\n\t\t\ty: start[1] - height / 2,\n\t\t\twidth: end[0] - start[0],\n\t\t\theight: height\n\t\t\t}, { // 当前坐标系的包围盒。\n\t\t\tx: params.coordSys.x,\n\t\t\ty: params.coordSys.y,\n\t\t\twidth: params.coordSys.width,\n\t\t\theight: params.coordSys.height\n\t\t\t}),\n\t\t\tstyle: api.style()\n\t\t\t};\n\t\t\t},\n\t\t\tencode: {\n\t\t\tx: [1, 2], // data 中『维度1』和『维度2』对应到 X 轴\n\t\t\ty: 0// data 中『维度0』对应到 Y 轴\n\t\t\t},\n\t\t\tdata: [ // 维度0 维度1 维度2\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[0] } },//条形颜色\n\t\t\tname: 'Reportime',\n\t\t\tvalue: [0, '2021/6/1 1:28', '2021/6/1 5:00']//0,1,2代表y轴的索引，后两位代表x轴数据开始和结束\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[0] } },\n\t\t\tname: 'Reportime',\n\t\t\tvalue: [0, '2021/6/1 6:13', '2021/6/1 8:22']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[0] } },\n\t\t\tname: 'Reportime',\n\t\t\tvalue: [0, '2021/6/1 9:13', '2021/6/1 24:00']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[1] } },\n\t\t\tname: 'hello-world',\n\t\t\tvalue: [1, '2021/6/1 5:00', '2021/6/1 9:13']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[1] } },\n\t\t\tname: 'hello-world',\n\t\t\tvalue: [1, '2021/6/1 13:22', '2021/6/1 18:10']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[1] } },\n\t\t\tname: 'hello-world',\n\t\t\tvalue: [1, '2021/6/1 12:47', '2021/6/1 14:52']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[2] } },\n\t\t\tname: 'yeah',\n\t\t\tvalue: [2, '2021/6/1 2:10', '2021/6/1 9:47']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[2] } },\n\t\t\tname: 'yeah',\n\t\t\tvalue: [2, '2021/6/1 9:10', '2021/6/1 12:47']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[2] } },\n\t\t\tname: 'yeah',\n\t\t\tvalue: [2, '2021/6/1 14:52', '2021/6/1 17:00']\n\t\t\t},\n\t\t\t]\n\t\t\t}\n\t\t\t]\n\t\t\t};\n\t\t\t\toption && myChart.setOption(option);\n\t\t\t},\n\t\t\tgetlanguagetime(){\n\t\t\tvar chartDom = document.getElementById('languagetime');\n\t\t\tvar myChart = this.$echarts.init(chartDom);\n\t\t\tvar option;\n\t\t\tvar colors = ['#47fff4', '#674dd6', '#d36ce2']; //三种状态的颜色\n\t\t\tvar state = ['vue','python','java']; //三种状态\n\t\t\t\n\t\t\t// echart配置\n\t\t\toption = {\n\t\t\tcolor: colors,\n\t\t\ttooltip: {//提示框\n\t\t\tformatter: function (params) {\n\t\t\treturn params.name + ':' + params.value[1] + '~' + params.value[2];\n\t\t\t}//数据的值\n\t\t\t},\n\t\t\tlegend: {//图例\n\t\t\tdata: state,\n\t\t\tbottom: '1%',\n\t\t\tselectedMode: false, // 图例设为不可点击\n\t\t\ttextStyle: {\n\t\t\tcolor: '#ffffff'\n\t\t\t}\n\t\t\t},\n\t\t\tgrid: {//绘图网格\n\t\t\tleft: '3%',\n\t\t\tright: '3%',\n\t\t\ttop: '1%',\n\t\t\tbottom: '10%',\n\t\t\tcontainLabel: true\n\t\t\t},\n\t\t\txAxis: { \n\t\t\ttype: 'time',               \n\t\t\tinterval: 3600  * 1000,   //以一个小时递增 \n\t\t\t//min:'2009/6/1 0:00', //将data里最小时间的整点时间设为min,否则min会以data里面的min为开始进行整点递增\n\t\t\taxisLabel: {formatter: function (value) { \n\t\t\tvar date = new Date(value); return getzf(date.getHours()) + ':00';  \n\t\t\tfunction getzf(num) {\n\t\t\t\tif (parseInt(num) < 10) {  num = '0' + num; }  \n\t\t\t\treturn num; \n\t\t\t}           \n\t\t\t}, \n\t\t\tcolor: '#ffffff',\n\t\t\t},\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\tdata: ['vue','python','java'],\n\t\t\taxisLabel: {\n\t\t\t\tfontSize: 12,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t}\t\n\t\t\t},\n\t\t\ttoolbox: {\n\t\t\tshow: true,\n\t\t\tfeature: {\n\t\t\tmark: { show: true },\n\t\t\trestore: { show: true },\n\t\t\tsaveAsImage: { show: true }\n\t\t\t}\n\t\t\t},\n\t\t\tseries: [\n\t\t\t// 用空bar来显示三个图例\n\t\t\t{ name: state[0], type: 'bar', data: [] },\n\t\t\t{ name: state[1], type: 'bar', data: [] },\n\t\t\t{ name: state[2], type: 'bar', data: [] },\n\t\t\t{\n\t\t\ttype: 'custom',                \n\t\t\trenderItem: function (params, api) {//开发者自定义的图形元素渲染逻辑，是通过书写 renderItem 函数实现的\n\t\t\tvar categoryIndex = api.value(0);//这里使用 api.value(0) 取出当前 dataItem 中第一个维度的数值。\n\t\t\tvar start = api.coord([api.value(1), categoryIndex]); // 这里使用 api.coord(...) 将数值在当前坐标系中转换成为屏幕上的点的像素值。\n\t\t\tvar end = api.coord([api.value(2), categoryIndex]);\n\t\t\tvar height = 35\n\t\t\t\n\t\t\treturn {\n\t\t\ttype: 'rect',// 表示这个图形元素是矩形。还可以是 'circle', 'sector', 'polygon' 等等。\n\t\t\tshape: echarts.graphic.clipRectByRect({ // 矩形的位置和大小。\n\t\t\tx: start[0],\n\t\t\ty: start[1] - height / 2,\n\t\t\twidth: end[0] - start[0],\n\t\t\theight: height\n\t\t\t}, { // 当前坐标系的包围盒。\n\t\t\tx: params.coordSys.x,\n\t\t\ty: params.coordSys.y,\n\t\t\twidth: params.coordSys.width,\n\t\t\theight: params.coordSys.height\n\t\t\t}),\n\t\t\tstyle: api.style()\n\t\t\t};\n\t\t\t},\n\t\t\tencode: {\n\t\t\tx: [1, 2], // data 中『维度1』和『维度2』对应到 X 轴\n\t\t\ty: 0// data 中『维度0』对应到 Y 轴\n\t\t\t},\n\t\t\tdata: [ // 维度0 维度1 维度2\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[0] } },//条形颜色\n\t\t\tname: 'vue',\n\t\t\tvalue: [0, '2021/6/1 1:28', '2021/6/1 5:00']//0,1,2代表y轴的索引，后两位代表x轴数据开始和结束\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[0] } },\n\t\t\tname: 'vue',\n\t\t\tvalue: [0, '2021/6/1 6:13', '2021/6/1 8:22']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[0] } },\n\t\t\tname: 'vue',\n\t\t\tvalue: [0, '2021/6/1 9:13', '2021/6/1 24:00']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[1] } },\n\t\t\tname: 'python',\n\t\t\tvalue: [1, '2021/6/1 5:00', '2021/6/1 9:13']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[1] } },\n\t\t\tname: 'python',\n\t\t\tvalue: [1, '2021/6/1 13:22', '2021/6/1 18:10']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[1] } },\n\t\t\tname: 'python',\n\t\t\tvalue: [1, '2021/6/1 12:47', '2021/6/1 14:52']\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[2] } },//条形颜色\n\t\t\tname: 'java',\n\t\t\tvalue: [2, '2021/6/1 1:28', '2021/6/1 5:00']//0,1,2代表y轴的索引，后两位代表x轴数据开始和结束\n\t\t\t},\n\t\t\t{\n\t\t\titemStyle: { normal: { color: colors[2] } },\n\t\t\tname: 'java',\n\t\t\tvalue: [2, '2021/6/1 6:13', '2021/6/1 8:22']\n\t\t\t},\n\t\t\t\n\t\t\t]\n\t\t\t}\n\t\t\t]\n\t\t\t};\n\t\t\t\toption && myChart.setOption(option);\n\t\t\t}\n        },\n        //一进组件就会去请求后端接口 获取首页数据\n       /* created() {\n            this.getTableData()\n        }*/\n\t\t//监听函数\n\t\twatch: {\n\t\t'$route' () {\n\t\t\tthis.initData();//我的初始化方法\n\t\t\t}\n\t\t},\n\n    }\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n    @import '~@/assets/scss/home';\n\t.div-inline{ \n\t\tdisplay:inline;\n\t\twidth:30%;\n\t}\n\t::v-deep.el-input--suffix .el-input__inner {\n\tpadding-right: 102px;\n\tbackground-color:#6276ef;\n\tcolor:black;\n\t}\n\t/*\n\t::v-deep.el-input__inner {\n\tbackground-color:#5200c1;\n\tcolor: #fff;\n\tborder: 1px solid #31cae4;\n\t}\n\t\n\t.el-select-dropdown__item {\n  font-size: 15px;\n\tline-height: 19px;\n\tcolor: #000000;\n\tfont-weight: 200;\n\tbackground-color: #5200c1;\n\t}\n\t::v-deep.el-select-dropdown {\n\tbackground-color: #5200c1;\n\tborder: 1px solid blue;\n\t}\n\t::v-deep.el-select-dropdown__list {\n\tpadding: 0;\n\tbackground-color:#5200c1;\n\t}\n\t::v-deep.el-popper[x-placement^=\"bottom\"] {\n\tmargin-top: 0px;\n\tbackground-color:#5200c1;\n\t}\n\t::v-deep.el-popper .popper__arrow,\n\t::v-deep.el-popper .popper__arrow::after {\n\tdisplay: none;\n\tbackground-color:#5200c1;\n\t}\n\t.el-select-dropdown__item:hover {\n\tbackground-color:#5200c1;\n\t//background-color: rgba(0, 225, 219, 0.690196078431373);\n\t}\n\t*/\n</style>\n"]}]}