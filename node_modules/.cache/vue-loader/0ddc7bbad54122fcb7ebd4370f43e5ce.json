{"remainingRequest":"/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/src/components/CommonAside.vue?vue&type=template&id=a28ad4e6&scoped=true&","dependencies":[{"path":"/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/src/components/CommonAside.vue","mtime":1655987218014},{"path":"/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/FengXiao/Desktop/Reportime-web/Reportime/Repotime-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImVsLW1lbnUiLAogICAgewogICAgICBzdGF0aWNDbGFzczogImVsLW1lbnUtdmVydGljYWwtZGVtbyIsCiAgICAgIGF0dHJzOiB7CiAgICAgICAgY29sbGFwc2U6IF92bS5pc0NvbGxhcHNlLAogICAgICAgICJkZWZhdWx0LWFjdGl2ZSI6IF92bS4kcm91dGUucGF0aCwKICAgICAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjN2VhOWZmIiwKICAgICAgICAidGV4dC1jb2xvciI6ICIjZmZmIiwKICAgICAgICAiYWN0aXZlLXRleHQtY29sb3IiOiAiIzAwMDAwMCIsCiAgICAgICAgImFjdGl2ZS1iYWNrZ3JvdW5kY29sb3IiOiAiI2Y1NjAwNyIKICAgICAgfQogICAgfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgImgzIiwKICAgICAgICB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgdmFsdWU6ICFfdm0uaXNDb2xsYXBzZSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAiIWlzQ29sbGFwc2UiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICAiZm9udC1zaXplIjogIjMzcHgiLAogICAgICAgICAgICBoZWlnaHQ6ICIxMiUiLAogICAgICAgICAgICAiZm9udC1zdHlsZSI6ICJpdGFsaWMiLAogICAgICAgICAgICBjb2xvcjogImJsYWNrIgogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgW192bS5fdigiUmVwb3RpbWUiKV0KICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImgzIiwKICAgICAgICB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgdmFsdWU6IF92bS5pc0NvbGxhcHNlLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJpc0NvbGxhcHNlIgogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICBbX2MoImVsLWF2YXRhciIsIHsgYXR0cnM6IHsgc3JjOiBfdm0uYXZhdGFyIH0gfSldLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImgzIiwKICAgICAgICB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgdmFsdWU6ICFfdm0uaXNDb2xsYXBzZSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAiIWlzQ29sbGFwc2UiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNTdHlsZTogeyBjb2xvcjogImJsYWNrIiB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygiZWwtYXZhdGFyIiwgeyBhdHRyczogeyBzcmM6IF92bS5hdmF0YXIgfSB9KSwKICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLm5pY2tuYW1lKSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX3ZtLl9sKF92bS5ub0NoaWxkcmVuLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgImVsLW1lbnUtaXRlbSIsCiAgICAgICAgICB7CiAgICAgICAgICAgIGtleTogaXRlbS5wYXRoLAogICAgICAgICAgICBhdHRyczogeyBpbmRleDogaXRlbS5wYXRoIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jbGlja01lbnUoaXRlbSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgIGNsYXNzOiAiZWwtaWNvbi0iICsgaXRlbS5pY29uLAogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiI2ZjMjQxYSIgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IHNsb3Q6ICJ0aXRsZSIgfSwgc2xvdDogInRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhpdGVtLmxhYmVsKSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIH0pLAogICAgICBfdm0uX2woX3ZtLmhhc0NoaWxkcmVuLCBmdW5jdGlvbihpdGVtLCBpbmRleCkgewogICAgICAgIHJldHVybiBfYygKICAgICAgICAgICJlbC1zdWJtZW51IiwKICAgICAgICAgIHsga2V5OiBpbmRleCwgYXR0cnM6IHsgaW5kZXg6IGl0ZW0ubGFiZWwgfSB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygidGVtcGxhdGUiLCB7IHNsb3Q6ICJ0aXRsZSIgfSwgWwogICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgY2xhc3M6ICJlbC1pY29uLSIgKyBpdGVtLmljb24sCiAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBjb2xvcjogIiNmYzI0MWEiIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJzcGFuIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgImZvbnQtc2l6ZSI6ICIxN3B4IiB9LAogICAgICAgICAgICAgICAgICBhdHRyczogeyBzbG90OiAidGl0bGUiIH0sCiAgICAgICAgICAgICAgICAgIHNsb3Q6ICJ0aXRsZSIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KF92bS5fcyhpdGVtLmxhYmVsKSldCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImVsLW1lbnUtaXRlbS1ncm91cCIsCiAgICAgICAgICAgICAgX3ZtLl9sKGl0ZW0uY2hpbGRyZW4sIGZ1bmN0aW9uKHN1Ykl0ZW0sIHN1YkluZGV4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICJlbC1tZW51LWl0ZW0iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAga2V5OiBzdWJJbmRleCwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpbmRleDogc3ViSXRlbS5wYXRoIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5jbGlja01lbnUoc3ViSXRlbSkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfYygiaSIsIHsKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiAiZWwtaWNvbi0iICsgc3ViSXRlbS5pY29uLAogICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgY29sb3I6ICIjZmMyNDFhIiB9CiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IGF0dHJzOiB7IHNsb3Q6ICJ0aXRsZSIgfSwgc2xvdDogInRpdGxlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKHN1Ykl0ZW0ubGFiZWwpKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0sCiAgICAgICAgICAyCiAgICAgICAgKQogICAgICB9KSwKICAgICAgX2MoCiAgICAgICAgImgzIiwKICAgICAgICB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgdmFsdWU6ICFfdm0uaXNDb2xsYXBzZSwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAiIWlzQ29sbGFwc2UiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNDbGFzczogImZvb3R2aWV3IiwKICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJsaW5lLWhlaWdodCI6ICI0MHB4IiB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImVsLWxpbmsiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgIGNvbG9yOiAiYmxhY2siLAogICAgICAgICAgICAgICAgImZvbnQtc3R5bGUiOiAiaXRhbGljIiwKICAgICAgICAgICAgICAgICJmb250LXNpemUiOiAiMS43ZW0iLAogICAgICAgICAgICAgICAgImZvbnQtd2VpZ2h0IjogIjQwMCIsCiAgICAgICAgICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgaHJlZjogImh0dHBzOi8vZ2l0aHViLmNvbS9BU0M4Mzg0L1JlcG9UaW1lLXZzY29kZSIsCiAgICAgICAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbX3ZtLl92KCIgQ29udGFjdCB1cyAiKV0KICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDIKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}